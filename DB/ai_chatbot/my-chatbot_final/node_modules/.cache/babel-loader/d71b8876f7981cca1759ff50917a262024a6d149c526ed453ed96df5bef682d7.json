{"ast":null,"code":"var _jsxFileName = \"/Users/ichan-yeong/MommyBotfixed/MommyBot/DB/ai_chatbot/my-chatbot_final/src/Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatBot() {\n  _s();\n  const [userInput, setUserInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const handleSendMessage = async () => {\n    // 사용자 메시지를 상태에 추가\n    const newUserMessage = {\n      text: userInput,\n      sender: 'user'\n    };\n    setMessages(prevMessages => [...prevMessages, newUserMessage]);\n    try {\n      const response = await fetch('http://localhost:8080/rasp/init', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: userInput\n        }),\n        mode: 'cors' // CORS 모드 설정\n      });\n      if (!response.ok) {\n        throw new Error('서버 응답 실패');\n      }\n      const data = await response.json();\n      // 봇의 응답 메시지를 상태에 추가\n      setMessages(prevMessages => [...prevMessages, {\n        text: data.aiResponse,\n        sender: 'assistant'\n      }]);\n    } catch (error) {\n      console.error('에러 발생:', error);\n      setMessages(prevMessages => [...prevMessages, {\n        text: '서버와 연결할 수 없습니다. 다시 시도해 주세요.',\n        sender: 'assistant'\n      }]);\n    } finally {\n      // 사용자 입력 필드를 초기화\n      setUserInput('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: '20px',\n      fontFamily: 'Arial, sans-serif'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uB9C8\\uBBF8\\uBD07 \\uB85C\\uBD07 \\uD14C\\uC2A4\\uD2B8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: '1px solid #aaa',\n        padding: '10px',\n        height: '300px',\n        overflowY: 'scroll',\n        marginBottom: '20px'\n      },\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: '10px 0',\n          color: message.sender === 'user' ? 'gray' : 'black'\n        },\n        children: message.sender === 'user' ? `사용자: ${message.text}` : `로봇: ${message.text}`\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: userInput,\n      onChange: e => setUserInput(e.target.value),\n      placeholder: \"\\uBA54\\uC2DC\\uC9C0\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694...\",\n      style: {\n        width: '80%',\n        marginRight: '10px'\n      } // 입력창 스타일\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSendMessage,\n      children: \"\\uC804\\uC1A1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n_s(ChatBot, \"K0oX757VKCMKA8zy3I1tPoQS6gk=\");\n_c = ChatBot;\nexport default ChatBot;\nvar _c;\n$RefreshReg$(_c, \"ChatBot\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ChatBot","_s","userInput","setUserInput","messages","setMessages","handleSendMessage","newUserMessage","text","sender","prevMessages","response","fetch","method","headers","body","JSON","stringify","message","mode","ok","Error","data","json","aiResponse","error","console","style","margin","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","border","padding","height","overflowY","marginBottom","map","index","color","type","value","onChange","e","target","placeholder","width","marginRight","onClick","_c","$RefreshReg$"],"sources":["/Users/ichan-yeong/MommyBotfixed/MommyBot/DB/ai_chatbot/my-chatbot_final/src/Chatbot.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction ChatBot() {\n    const [userInput, setUserInput] = useState('');\n    const [messages, setMessages] = useState([]);\n\n    const handleSendMessage = async () => {\n        // 사용자 메시지를 상태에 추가\n        const newUserMessage = { text: userInput, sender: 'user' };\n        setMessages((prevMessages) => [...prevMessages, newUserMessage]);\n\n        try {\n            const response = await fetch('http://localhost:8080/rasp/init', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ message: userInput }),\n                mode: 'cors',  // CORS 모드 설정\n            });\n\n            if (!response.ok) {\n                throw new Error('서버 응답 실패');\n            }\n\n            const data = await response.json();\n            // 봇의 응답 메시지를 상태에 추가\n            setMessages((prevMessages) => [\n                ...prevMessages,\n                { text: data.aiResponse, sender: 'assistant' },\n            ]);\n        } catch (error) {\n            console.error('에러 발생:', error);\n            setMessages((prevMessages) => [\n                ...prevMessages,\n                { text: '서버와 연결할 수 없습니다. 다시 시도해 주세요.', sender: 'assistant' },\n            ]);\n        } finally {\n            // 사용자 입력 필드를 초기화\n            setUserInput('');\n        }\n    };\n\n    return (\n        <div style={{ margin: '20px', fontFamily: 'Arial, sans-serif' }}>\n            <h1>마미봇 로봇 테스트</h1>\n            <div style={{ border: '1px solid #aaa', padding: '10px', height: '300px', overflowY: 'scroll', marginBottom: '20px' }}>\n                {messages.map((message, index) => (\n                    <div key={index} style={{ margin: '10px 0', color: message.sender === 'user' ? 'gray' : 'black' }}>\n                        {message.sender === 'user' ? `사용자: ${message.text}` : `로봇: ${message.text}`}\n                    </div>\n                ))}\n            </div>\n            <input\n                type=\"text\"\n                value={userInput}\n                onChange={(e) => setUserInput(e.target.value)}\n                placeholder=\"메시지를 입력하세요...\"\n                style={{ width: '80%', marginRight: '10px' }} // 입력창 스타일\n            />\n            <button onClick={handleSendMessage}>전송</button>\n        </div>\n    );\n}\n\nexport default ChatBot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}