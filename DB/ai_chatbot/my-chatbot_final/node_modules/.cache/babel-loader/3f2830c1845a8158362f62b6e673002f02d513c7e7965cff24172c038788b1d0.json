{"ast":null,"code":"var _jsxFileName = \"/Users/ichan-yeong/my-chatbot/src/Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatBot() {\n  _s();\n  const [userInput, setUserInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const handleSendMessage = async () => {\n    setMessages([...messages, {\n      text: userInput,\n      sender: 'user'\n    }]);\n    try {\n      const response = await fetch('http://localhost:5001/chat', {\n        // Python 백엔드의 엔드포인트 주소\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          mode: 'cors' // CORS 모드 설정\n        },\n        body: JSON.stringify({\n          message: userInput\n        })\n      });\n      if (!response.ok) {\n        throw new Error('서버 응답 실패');\n      }\n      const data = await response.json();\n      console.log(data);\n      setMessages(prevMessages => [...prevMessages, {\n        text: data.response,\n        sender: 'assistant'\n      }]);\n    } catch (error) {\n      setMessages(prevMessages => [...prevMessages, {\n        text: '서버와 연결할 수 없습니다. 다시 시도해 주세요.',\n        sender: 'assistant'\n      }]);\n      console.error('에러 발생:', error);\n      console.log(error, \"ㅓㅓ\");\n    }\n    setUserInput('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: '20px',\n      fontFamily: 'Arial, sans-serif'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uC5C4\\uB9C8\\uD615 \\uB85C\\uBD07\\uACFC\\uC758 \\uCC44\\uD305\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: '1px solid #ccc',\n        padding: '10px',\n        height: '300px',\n        overflowY: 'scroll',\n        marginBottom: '10px'\n      },\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: '5px 0',\n          color: message.sender === 'user' ? 'blue' : 'green'\n        },\n        children: message.sender === 'user' ? `사용자: ${message.text}` : `로봇: ${message.text}`\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: userInput,\n      onChange: e => setUserInput(e.target.value),\n      placeholder: \"\\uBA54\\uC2DC\\uC9C0\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSendMessage,\n      children: \"\\uC804\\uC1A1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n_s(ChatBot, \"K0oX757VKCMKA8zy3I1tPoQS6gk=\");\n_c = ChatBot;\nexport default ChatBot;\nvar _c;\n$RefreshReg$(_c, \"ChatBot\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ChatBot","_s","userInput","setUserInput","messages","setMessages","handleSendMessage","text","sender","response","fetch","method","headers","mode","body","JSON","stringify","message","ok","Error","data","json","console","log","prevMessages","error","style","margin","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","border","padding","height","overflowY","marginBottom","map","index","color","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/ichan-yeong/my-chatbot/src/Chatbot.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction ChatBot() {\n    const [userInput, setUserInput] = useState('');\n    const [messages, setMessages] = useState([]);\n\n    const handleSendMessage = async () => {\n        setMessages([...messages, { text: userInput, sender: 'user' }]);\n\n        try {\n            const response = await fetch('http://localhost:5001/chat', {  // Python 백엔드의 엔드포인트 주소\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    mode: 'cors'  // CORS 모드 설정\n\n                },\n                body: JSON.stringify({ message: userInput })\n            });\n\n            if (!response.ok) {\n                throw new Error('서버 응답 실패');\n            }\n\n            const data = await response.json();\n            console.log(data)\n            setMessages(prevMessages => [...prevMessages, { text: data.response, sender: 'assistant' }]);\n        } catch (error) {\n            setMessages(prevMessages => [...prevMessages, { text: '서버와 연결할 수 없습니다. 다시 시도해 주세요.', sender: 'assistant' }]);\n            console.error('에러 발생:', error);\n            console.log(error,\"ㅓㅓ\")\n        }\n\n        setUserInput('');\n    };\n\n    return (\n        <div style={{ margin: '20px', fontFamily: 'Arial, sans-serif' }}>\n            <h1>엄마형 로봇과의 채팅</h1>\n            <div style={{ border: '1px solid #ccc', padding: '10px', height: '300px', overflowY: 'scroll', marginBottom: '10px' }}>\n                {messages.map((message, index) => (\n                    <div key={index} style={{ margin: '5px 0', color: message.sender === 'user' ? 'blue' : 'green' }}>\n                        {message.sender === 'user' ? `사용자: ${message.text}` : `로봇: ${message.text}`}\n                    </div>\n                ))}\n            </div>\n            <input\n                type=\"text\"\n                value={userInput}\n                onChange={(e) => setUserInput(e.target.value)}\n                placeholder=\"메시지를 입력하세요...\"\n            />\n            <button onClick={handleSendMessage}>전송</button>\n        </div>\n    );\n}\n\nexport default ChatBot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}